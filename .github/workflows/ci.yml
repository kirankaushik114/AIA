name: Robot Framework CI (hourly)


on:
schedule:
# Runs at minute 0 of every hour — adjust cron as needed (UTC timezone for GitHub Actions)
- cron: '0 * * * *'
workflow_dispatch: {}


jobs:
run-tests:
runs-on: ubuntu-latest
steps:
- name: Checkout
uses: actions/checkout@v4


- name: Set up Python
uses: actions/setup-python@v4
with:
python-version: '3.11'


- name: Install dependencies
run: |
python -m pip install --upgrade pip
pip install -r requirements.txt


- name: Run Robot tests
run: |
mkdir -p reports
./scripts/run_tests.sh
continue-on-error: true


- name: Upload Artifact (reports)
uses: actions/upload-artifact@v4
with:
name: robot-reports
path: reports/


- name: Send results by email
env:
SMTP_HOST: ${{ secrets.SMTP_HOST }}
SMTP_PORT: ${{ secrets.SMTP_PORT }}
SMTP_USER: ${{ secrets.SMTP_USER }}
SMTP_PASS: ${{ secrets.SMTP_PASS }}
EMAIL_TO: ${{ secrets.EMAIL_TO }}
EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
run: |
python scripts/send_results.py


- name: Fail job on test failures
if: always()
run: |
# Robot returns non-zero if tests failed; ensure workflow fails appropriately
# If run_tests.sh exited non-zero earlier, the step would have continued due to continue-on-error
# We inspect the return code by checking output.xml
if [ -f reports/output.xml ]; then
# parse with xmllint to find total failures
FAILS=$(xmllint --xpath 'string(//statistics//total//failures)' reports/output.xml 2>/dev/null || echo "")
# Fallback: If xmllint not present, grep
if [ -z "$FAILS" ]; then
FAILS=$(grep -o '<failures>[^<]*' reports/output.xml | head -n1 | sed -E 's/<failures>([0-9]+).*/\1/' || echo "0")
fi
if [ "$FAILS" != "0" ]; then
echo "Tests have failures: $FAILS"
exit 1
else
echo "No failures reported."
fi
else
echo "No output.xml found — failing workflow."
exit 1
fi